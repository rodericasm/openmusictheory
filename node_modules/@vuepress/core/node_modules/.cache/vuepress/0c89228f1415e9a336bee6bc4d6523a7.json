{"remainingRequest":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!K:\\Workspace\\web\\openmusic_reskin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!K:\\Workspace\\web\\openmusic_reskin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!K:\\Workspace\\web\\openmusic_reskin\\docs\\.vuepress\\theme\\global-components\\sidebar.vue?vue&type=script&lang=js&","dependencies":[{"path":"K:\\Workspace\\web\\openmusic_reskin\\docs\\.vuepress\\theme\\global-components\\sidebar.vue","mtime":1588416230137},{"path":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}