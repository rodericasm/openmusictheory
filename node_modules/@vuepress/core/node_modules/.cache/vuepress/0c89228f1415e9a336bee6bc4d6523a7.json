{"remainingRequest":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!K:\\Workspace\\web\\openmusic_reskin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!K:\\Workspace\\web\\openmusic_reskin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!K:\\Workspace\\web\\openmusic_reskin\\docs\\.vuepress\\theme\\global-components\\sidebar.vue?vue&type=script&lang=js&","dependencies":[{"path":"K:\\Workspace\\web\\openmusic_reskin\\docs\\.vuepress\\theme\\global-components\\sidebar.vue","mtime":1588452580137},{"path":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgbWV0aG9kczogewogICAgc2VhcmNoX3RvYzogZnVuY3Rpb24gc2VhcmNoX3RvYygpIHsKICAgICAgLy8gRGVjbGFyZSB2YXJpYWJsZXMKICAgICAgdmFyIGlucHV0LCBmaWx0ZXIsIGRsLCBkZDsKICAgICAgaW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgic2VhcmNoX3RvY19iYXIiKTsKICAgICAgZmlsdGVyID0gaW5wdXQudmFsdWUudG9VcHBlckNhc2UoKTsKICAgICAgZGwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibmF2X2xpc3RfbWVudSIpOwogICAgICBkZCA9IGRsLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJkZCIpOyAvLyBMb29wIHRocm91Z2ggYWxsIGxpc3QgaXRlbXMsIGFuZCBoaWRlIHRob3NlIHdobyBkb24ndCBtYXRjaCB0aGUgc2VhcmNoIHF1ZXJ5CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGRkLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgaWYgKGRkW2ldLmlubmVyVGV4dC50b1VwcGVyQ2FzZSgpLmluZGV4T2YoZmlsdGVyKSA+IC0xKSB7CiAgICAgICAgICBkZFtpXS5wYXJlbnRFbGVtZW50LmZpcnN0RWxlbWVudENoaWxkLnNldEF0dHJpYnV0ZSgibmFtZSIsICJzIik7CiAgICAgICAgICBkZFtpXS5wYXJlbnRFbGVtZW50LmZpcnN0RWxlbWVudENoaWxkLnN0eWxlLmRpc3BsYXkgPSAiIjsKICAgICAgICAgIGRkW2ldLnN0eWxlLmRpc3BsYXkgPSAiIjsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgaWYgKGRkW2ldLnBhcmVudEVsZW1lbnQuZmlyc3RFbGVtZW50Q2hpbGQuZ2V0QXR0cmlidXRlKCJuYW1lIikgIT0gInMiKSB7CiAgICAgICAgICAgIGRkW2ldLnBhcmVudEVsZW1lbnQuZmlyc3RFbGVtZW50Q2hpbGQuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKICAgICAgICAgIH0KCiAgICAgICAgICBkZFtpXS5zdHlsZS5kaXNwbGF5ID0gIm5vbmUiOwogICAgICAgIH0KCiAgICAgICAgaWYgKGRkW2ldLnBhcmVudEVsZW1lbnQubGFzdEVsZW1lbnRDaGlsZC5nZXRFbGVtZW50c0J5VGFnTmFtZSgiYSIpWzBdLmdldEF0dHJpYnV0ZSgiaWQiKSA9PSBkZFtpXS5nZXRFbGVtZW50c0J5VGFnTmFtZSgiYSIpWzBdLmdldEF0dHJpYnV0ZSgiaWQiKSkgewogICAgICAgICAgZGRbaV0ucGFyZW50RWxlbWVudC5maXJzdEVsZW1lbnRDaGlsZC5zZXRBdHRyaWJ1dGUoIm5hbWUiLCAiIik7CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbmF2X2J1aWxkOiBbewogICAgICAgIGhlYWRlcjogIkludHJvZHVjdGlvbiIsCiAgICAgICAgbmF2OiBbewogICAgICAgICAgbmFtZTogIkhvbWUiLAogICAgICAgICAgbGluazogIi9pbmRleC5odG1sIgogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICJBYm91dCBPcGVuIE11c2ljIFRoZW9yeSIsCiAgICAgICAgICBsaW5rOiAiL2Fib3V0IgogICAgICAgIH1dCiAgICAgIH0sIHsKICAgICAgICBoZWFkZXI6ICJGdW5kYW1lbnRhbHMiLAogICAgICAgIG5hdjogW3sKICAgICAgICAgIG5hbWU6ICJCYXNpYyBub3RhdGlvbiIsCiAgICAgICAgICBsaW5rOiAiL2Jhc2ljTm90YXRpb24iCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogIk1ldGVyIiwKICAgICAgICAgIGxpbms6ICIvbWV0ZXIiCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogIlByb3Rvbm90YXRpb24iLAogICAgICAgICAgbGluazogIi9wcm90b25vdGF0aW9uIgogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICJSaHl0aG1pYyB2YWx1ZXMiLAogICAgICAgICAgbGluazogIi9yaHl0aG1pY1ZhbHVlcyIKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAiQmVhbXMgYW5kIGJvcnJvd2VkIGRpdmlzaW9ucyIsCiAgICAgICAgICBsaW5rOiAiL2JlYW1zIgogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICJQaXRjaGVzIiwKICAgICAgICAgIGxpbms6ICIvcGl0Y2hlcyIKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAiU2NhbGVzIGFuZCBzY2FsZSBkZWdyZWVzIiwKICAgICAgICAgIGxpbms6ICIvc2NhbGVzIgogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICJLZXkgc2lnbmF0dXJlcyIsCiAgICAgICAgICBsaW5rOiAiL2tleVNpZ25hdHVyZXMiCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogIkludGVydmFscyIsCiAgICAgICAgICBsaW5rOiAiL2ludGVydmFscyIKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAiVHJpYWRzIGFuZCA3dGggY2hvcmRzIiwKICAgICAgICAgIGxpbms6ICIvdHJpYWRzIgogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICJUeXBlcyBvZiBtb3Rpb24iLAogICAgICAgICAgbGluazogIi9tb3Rpb25UeXBlcyIKICAgICAgICB9XQogICAgICB9LCB7CiAgICAgICAgaGVhZGVyOiAiVm9pY2UtbGVhZGluZyBhbmQgbW9kZWwgY29tcG9zaXRpb24iLAogICAgICAgIG5hdjogW3sKICAgICAgICAgIG5hbWU6ICJJbnRyb2R1Y3Rpb24gdG8gc3RyaWN0IHZvaWNlLWxlYWRpbmciLAogICAgICAgICAgbGluazogIi9zcGVjaWVzSW50cm8iCiAgICAgICAgfV0KICAgICAgfSwgewogICAgICAgIGhlYWRlcjogIlN0cmljdCAyLXZvaWNlIGNvbXBvc2l0aW9uIChzcGVjaWVzIGNvdW50ZXJwb2ludCkiLAogICAgICAgIG5hdjogW3sKICAgICAgICAgIG5hbWU6ICJDb21wb3NpbmcgYSBjYW50dXMgZmlybXVzIiwKICAgICAgICAgIGxpbms6ICIvY2FudHVzRmlybXVzIgogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICJDb21wb3NpbmcgYSBmaXJzdC1zcGVjaWVzIGNvdW50ZXJwb2ludCIsCiAgICAgICAgICBsaW5rOiAiL2ZpcnN0U3BlY2llcyIKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAiQ29tcG9zaW5nIGEgc2Vjb25kLXNwZWNpZXMgY291bnRlcnBvaW50IiwKICAgICAgICAgIGxpbms6ICIvc2Vjb25kU3BlY2llcyIKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAiQ29tcG9zaW5nIGEgdGhpcmQtc3BlY2llcyBjb3VudGVycG9pbnQiLAogICAgICAgICAgbGluazogIi90aGlyZFNwZWNpZXMiCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogIkNvbXBvc2luZyBhIGZvdXJ0aC1zcGVjaWVzIGNvdW50ZXJwb2ludCIsCiAgICAgICAgICBsaW5rOiAiL2ZvdXJ0aFNwZWNpZXMiCiAgICAgICAgfV0KICAgICAgfSwgewogICAgICAgIGhlYWRlcjogIlN0cmljdCBmb3VyLXZvaWNlIGNvbXBvc2l0aW9uIiwKICAgICAgICBuYXY6IFt7CiAgICAgICAgICBuYW1lOiAiSW50cm9kdWN0aW9uIHRvIHRob3JvdWdoYmFzcyIsCiAgICAgICAgICBsaW5rOiAiL3Rob3JvdWdoYmFzc0ZpZ3VyZXMiCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogIkEgYnJpZWYgaGlzdG9yeSBvZiBiYXNzbyBjb250aW51byIsCiAgICAgICAgICBsaW5rOiAiL2Jhc3NvQ29udGludW8taGlzdG9yeSIKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAiR2VuZXJhdGluZyBSb21hbiBudW1lcmFscyBmcm9tIGEgZmlndXJlZCBiYXNzIGxpbmUiLAogICAgICAgICAgbGluazogIi9STmZyb21GQiIKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAiQ29tcG9zaW5nIGluIGJhc3NvLWNvbnRpbnVvIHN0eWxlIiwKICAgICAgICAgIGxpbms6ICIvYmFzc29Db250aW51byIKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAiU3R5bGUgYW5kIHRlbmRlbmN5IiwKICAgICAgICAgIGxpbms6ICIvdGVuZGVuY3kiCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogIlRlbmRlbmN5IHRvbmVzIGFuZCBmdW5jdGlvbmFsIGhhcm1vbmljIGRpc3NvbmFuY2VzIiwKICAgICAgICAgIGxpbms6ICIvdGVuZGVuY3lUb25lc0Z1bmN0aW9uYWxEaXNzb25hbmNlcyIKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAiUmVhbGl6aW5nIGEgZmlndXJlZCBiYXNzIGluIHN0cmljdCBiYXNzbyBjb250aW51byBzdHlsZSAodmlkZW8pIiwKICAgICAgICAgIGxpbms6ICIvVEJEZW1vIgogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICJNZWxvZGljIGtleWJvYXJkIHN0eWxlIHZvaWNlLWxlYWRpbmciLAogICAgICAgICAgbGluazogIi9tZWxvZGljS2V5Ym9hcmRTdHlsZSIKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAiTWVsb2RpYyBrZXlib2FyZCBzdHlsZSB2b2ljZS1sZWFkaW5nIHNjaGVtYXRhIiwKICAgICAgICAgIGxpbms6ICIvS0JWTHNjaGVtYXRhIgogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICJSZWFsaXppbmcgYSBmaWd1cmVkIGJhc3MgbGluZSBpbiBtZWxvZGljIGtleWJvYXJkIHN0eWxlICh2aWRlbykiLAogICAgICAgICAgbGluazogIi9tZWxvZGljS0IiCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogIlJlYWxpemluZyBhbiB1bmZpZ3VyZWQgYmFzcyBsaW5lICh2aWRlbykiLAogICAgICAgICAgbGluazogIi91bmZpZ3VyZWRCYXNzIgogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICJFbWJlbGxpc2hpbmcgdG9uZXMiLAogICAgICAgICAgbGluazogIi9lbWJlbGxpc2hpbmdUb25lcyIKICAgICAgICB9XQogICAgICB9LCB7CiAgICAgICAgaGVhZGVyOiAiSGFybW9ueSIsCiAgICAgICAgbmF2OiBbewogICAgICAgICAgbmFtZTogIkludHJvZHVjdGlvbiB0byBtdXNpY2FsIGZ1bmN0aW9ucyIsCiAgICAgICAgICBsaW5rOiAiL2Z1bmN0aW9ucyIKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAiSGFybW9uaWMgZnVuY3Rpb25zIiwKICAgICAgICAgIGxpbms6ICIvaGFybW9uaWNGdW5jdGlvbnMiCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogIkhhcm1vbmljIHN5bnRheCAtIHRoZSBpZGVhbGl6ZWQgcGhyYXNlIiwKICAgICAgICAgIGxpbms6ICIvaGFybW9uaWNTeW50YXgxIgogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICJIYXJtb25pYyBzeW50YXggLSBwcm9sb25nYXRpb24iLAogICAgICAgICAgbGluazogIi9oYXJtb25pY1N5bnRheDIiCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogIlBlcmZvcm1pbmcgYSBoYXJtb25pYyBhbmFseXNpcyIsCiAgICAgICAgICBsaW5rOiAiL2hhcm1vbmljQW5hbHlzaXMiCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogIkNsYXNzaWNhbCBjYWRlbmNlIHR5cGVzIiwKICAgICAgICAgIGxpbms6ICIvY2FkZW5jZVR5cGVzIgogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICJDaHJvbWF0aWNhbGx5IGFsdGVyZWQgc3ViZG9taW5hbnQgY2hvcmRzIiwKICAgICAgICAgIGxpbms6ICIvYWx0ZXJlZFN1YmRvbWluYW50cyIKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAiQXBwbGllZCBjaG9yZHMiLAogICAgICAgICAgbGluazogIi9hcHBsaWVkQ2hvcmRzIgogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICJNb2RhbCBtaXh0dXJlIiwKICAgICAgICAgIGxpbms6ICIvbW9kYWxNaXh0dXJlIgogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICJNb2R1bGF0aW9uIiwKICAgICAgICAgIGxpbms6ICIvTW9kdWxhdGlvbiIKICAgICAgICB9XQogICAgICB9LCB7CiAgICAgICAgaGVhZGVyOiAiSGFuZG91dHMgYW5kIGNoYXJ0cyAiLAogICAgICAgIG5hdjogW3sKICAgICAgICAgIG5hbWU6ICJMZWFkLXNoZWV0IGFuZCBmaWd1cmVkLWJhc3Mgc3ltYm9scyIsCiAgICAgICAgICBsaW5rOiAiR3JhcGhpY3MvSGFuZG91dHMvTFNhbmRGQnN5bWJvbHMucGRmIiwKICAgICAgICAgIGhyZWY6ICJ0cnVlIgogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICJIYXJtb25pZXMgKFJvbWFuIG51bWVyYWxzIGFuZCBmdW5jdGlvbmFsIGJhc3MpIGJ5IGJhc3Mgc2NhbGUgZGVncmVlIiwKICAgICAgICAgIGxpbms6ICJHcmFwaGljcy9IYW5kb3V0cy9IYXJtb25pZXNCeUJhc3NTY2FsZURlZ3JlZS5wZGYiLAogICAgICAgICAgaHJlZjogInRydWUiCiAgICAgICAgfV0KICAgICAgfSwgewogICAgICAgIGhlYWRlcjogIiBDbGFzc2ljYWwgdGhlbWUgdHlwZXMiLAogICAgICAgIG5hdjogW3sKICAgICAgICAgIG5hbWU6ICJUaGUgc2VudGVuY2UuIiwKICAgICAgICAgIGxpbms6ICIvc2VudGVuY2UiCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogIlRoZSBwZXJpb2QiLAogICAgICAgICAgbGluazogIi9wZXJpb2QiCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogIkh5YnJpZCB0aGVtZXMiLAogICAgICAgICAgbGluazogIi9oeWJyaWRUaGVtZXMiCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogIkNvbXBvdW5kIHBlcmlvZHMiLAogICAgICAgICAgbGluazogIi9jb21wb3VuZFBlcmlvZCIKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAiQ29tcG91bmQgc2VudGVuY2VzIiwKICAgICAgICAgIGxpbms6ICIvY29tcG91bmRTZW50ZW5jZSIKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAiVGhlIHNtYWxsIHRlcm5hcnkiLAogICAgICAgICAgbGluazogIi9zbWFsbFRlcm5hcnkiCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogIlRoZSBzbWFsbCBiaW5hcnkiLAogICAgICAgICAgbGluazogIi9zbWFsbEJpbmFyeSIKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAiVGhlbWUgdHlwZSByZWZlcmVuY2UiLAogICAgICAgICAgbGluazogIi9jbGFzc2ljYWxUaGVtZXMiCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogIlRoZW1hdGljIGZ1bmN0aW9uIHJlZmVyZW5jZSIsCiAgICAgICAgICBsaW5rOiAiL3RoZW1lRnVuY3Rpb25zIgogICAgICAgIH1dCiAgICAgIH0sIHsKICAgICAgICBoZWFkZXI6ICJUZWNobmlxdWVzIG9mIFBocmFzZSBSaHl0aG0gIiwKICAgICAgICBuYXY6IFt7CiAgICAgICAgICBuYW1lOiAiRXh0ZXJuYWwgRXhwYW5zaW9ucyIsCiAgICAgICAgICBsaW5rOiAiL2V4dGVybmFsRXhwYW5zaW9ucyIKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAiSW50ZXJuYWwgRXhwYW5zaW9ucyIsCiAgICAgICAgICBsaW5rOiAiL2ludGVybmFsRXhwYW5zaW9ucyIKICAgICAgICB9XQogICAgICB9LCB7CiAgICAgICAgaGVhZGVyOiAiU29uYXRhIEZvcm0gIiwKICAgICAgICBuYXY6IFt7CiAgICAgICAgICBuYW1lOiAiSW50cm9kdWN0aW9uIHRvIFNvbmF0YSBUaGVvcnkiLAogICAgICAgICAgbGluazogIi9Tb25hdGFUaGVvcnktaW50cm8iCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogIlNvbmF0YSBmb3JtOiBleHBvc2l0aW9uIHR5cGVzIiwKICAgICAgICAgIGxpbms6ICIvU29uYXRhVGhlb3J5LWV4cG9zaXRpb24iCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogIlN0cnVjdHVyYWwgUG9pbnRzIG9mIEFycml2YWwiLAogICAgICAgICAgbGluazogIi9zb25hdGFTdHJ1Y3R1cmFsUG9pbnRzT2ZBcnJpdmFsIgogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICJUaGVtYXRpYyBNb2R1bGVzIiwKICAgICAgICAgIGxpbms6ICIvc29uYXRhVGhlbWF0aWNNb2R1bGVzIgogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICJTb25hdGEgZm9ybTogdGhlIHJlY2FwaXR1bGF0aW9uIiwKICAgICAgICAgIGxpbms6ICIvc29uYXRhUmVjYXAiCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogIlNvbmF0YSBmb3JtOiB0aGUgZGV2ZWxvcG1lbnQiLAogICAgICAgICAgbGluazogIi9zb25hdGFEZXZlbG9wbWVudCIKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAiU29uYXRhIGZvcm06IGZyYW1pbmcgbW9kdWxlcyAoaW50cm8gJiBjb2RhKSIsCiAgICAgICAgICBsaW5rOiAiL3NvbmF0YUZyYW1pbmdNb2R1bGVzIgogICAgICAgIH1dCiAgICAgIH0sIHsKICAgICAgICBoZWFkZXI6ICJSb25kbyBGb3JtIiwKICAgICAgICBuYXY6IFt7CiAgICAgICAgICBuYW1lOiAiSW50cm9kdWN0aW9uIHRvIFJvbmRvIGZvcm0iLAogICAgICAgICAgbGluazogIi9yb25kbyIKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAiVGhlbWF0aWMgRnVuY3Rpb24gaW4gUm9uZG8gRm9ybSIsCiAgICAgICAgICBsaW5rOiAiL3RoZW1hdGljRnVuY3Rpb25JblJvbmRvIgogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICJGaXZlLVBhcnQgUm9uZG8iLAogICAgICAgICAgbGluazogIi9maXZlUGFydFJvbmRvIgogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICJTb25hdGEgUm9uZG8iLAogICAgICAgICAgbGluazogIi9zb25hdGFSb25kbyIKICAgICAgICB9XQogICAgICB9LCB7CiAgICAgICAgaGVhZGVyOiAiT3RoZXIgZm9ybWFsIHN0cnVjdHVyZXMgaW4gdGhlIGNsYXNzaWNhbCBzdHlsZSIsCiAgICAgICAgbmF2OiBbewogICAgICAgICAgbmFtZTogIk1pbnVldCBmb3JtIiwKICAgICAgICAgIGxpbms6ICIvbWludWV0IgogICAgICAgIH1dCiAgICAgIH0sIHsKICAgICAgICBoZWFkZXI6ICJHYWxhbnQgU2NoZW1hdGEiLAogICAgICAgIG5hdjogW3sKICAgICAgICAgIG5hbWU6ICJHYWxhbnQgc2NoZW1hdGEg4oCTIG9wZW5zIGFuZCBjbG9zZXMiLAogICAgICAgICAgbGluazogIi9zY2hlbWF0YU9wZW5zQW5kQ2xvc2VzIgogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICJHYWxhbnQgU2NoZW1hdGEg4oCTIGNvbnRpbnVhdGlvbiBwYXR0ZXJucyIsCiAgICAgICAgICBsaW5rOiAiL3NjaGVtYXRhQ29udGludWF0aW9uUGF0dGVybnMiCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogIkdhbGFudCBzY2hlbWF0YSDigJMgc3VtbWFyeSIsCiAgICAgICAgICBsaW5rOiAiL3NjaGVtYXRhU3VtbWFyeSIKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAiSW1wcm92aXNpbmcgYSBzZW50ZW5jZSB3aXRoIGdhbGFudCBzY2hlbWF0YSIsCiAgICAgICAgICBsaW5rOiAiL3NjaGVtYXRhLWltcHJvdiIKICAgICAgICB9XQogICAgICB9LCB7CiAgICAgICAgaGVhZGVyOiAiKFBvc3QtdG9uYWwpIEJhc2ljcyIsCiAgICAgICAgbmF2OiBbewogICAgICAgICAgbmFtZTogIlBpdGNoIChjbGFzcykiLAogICAgICAgICAgbGluazogIi9waXRjaC1jbGFzcyIKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAiSW50ZXJ2YWwgKGNsYXNzKS4iLAogICAgICAgICAgbGluazogIi9pbnRlcnZhbC1jbGFzcyIKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAiTW9kdWxhciAxMiBhcml0aG1ldGljIiwKICAgICAgICAgIGxpbms6ICIvbW9kMTIiCiAgICAgICAgfV0KICAgICAgfSwgewogICAgICAgIGhlYWRlcjogIihQb3N0LXRvbmFsKSBPcmdhbml6aW5nIEZvcmNlcyIsCiAgICAgICAgbmF2OiBbewogICAgICAgICAgbmFtZTogIkNvbGxlY3Rpb25zIGFuZCBTY2FsZXMiLAogICAgICAgICAgbGluazogIi9zY2FsZXMyIgogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICJTeW1tZXRyeSBhbmQgQ2VudHJpY2l0eSIsCiAgICAgICAgICBsaW5rOiAiL3N5bW1ldHJ5QW5kQ2VudHJpY2l0eSIKICAgICAgICB9XQogICAgICB9LCB7CiAgICAgICAgaGVhZGVyOiAiKFBvc3QtdG9uYWwpIFNldCBUaGVvcnkiLAogICAgICAgIG5hdjogW3sKICAgICAgICAgIG5hbWU6ICJOb3JtYWwgT3JkZXIiLAogICAgICAgICAgbGluazogIi9ub3JtYWxPcmRlciIKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAiVHJhbnBvc2l0aW9uIiwKICAgICAgICAgIGxpbms6ICIvdHJhbnNwb3NpdGlvbiIKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAiSW52ZXJzaW9uIiwKICAgICAgICAgIGxpbms6ICIvaW52ZXJzaW9uIgogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICJTZXQgQ2xhc3MgYW5kIFByaW1lIEZvcm0gKDEpIiwKICAgICAgICAgIGxpbms6ICIvc2V0Q2xhc3NBbmRQcmltZUZvcm0xIgogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICJTZXQgQ2xhc3MgYW5kIFByaW1lIEZvcm0gKDIpIiwKICAgICAgICAgIGxpbms6ICIvc2V0Q2xhc3NBbmRQcmltZUZvcm0yIgogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICJDb21wbGVtZW50cyIsCiAgICAgICAgICBsaW5rOiAiL2NvbXBsZW1lbnRzIgogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICJDb21tb24gVG9uZXMgdW5kZXIgVHJhbnNwb3NpdGlvbiIsCiAgICAgICAgICBsaW5rOiAiL2NvbW1vblRvbmVzVW5kZXJUcmFuc3Bvc2l0aW9uIgogICAgICAgIH1dCiAgICAgIH0sIHsKICAgICAgICBoZWFkZXI6ICIoUG9zdC10b25hbCkgMTItVG9uZSBUaGVvcnkiLAogICAgICAgIG5hdjogW3sKICAgICAgICAgIG5hbWU6ICJCYXNpY3MiLAogICAgICAgICAgbGluazogIi90d2VsdmVUb25lQmFzaWNzIgogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICJPcGVyYXRpb25zIiwKICAgICAgICAgIGxpbms6ICIvdHdlbHZlVG9uZU9wZXJhdGlvbnMiCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogIkludGVydmFsbGljIFN0cnVjdHVyZSIsCiAgICAgICAgICBsaW5rOiAiL3R3ZWx2ZVRvbmVJbnRlcnZhbGxpY1N0cnVjdHVyZSIKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAiRGVyaXZhdGlvbiIsCiAgICAgICAgICBsaW5rOiAiL3R3ZWx2ZVRvbmVNdXNpY0Rlcml2YXRpb24iCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogIkludmFyaWFuY2UiLAogICAgICAgICAgbGluazogIi90d2VsdmVUb25lTXVzaWNJbnZhcmlhbmNlIgogICAgICAgIH1dCiAgICAgIH0sIHsKICAgICAgICBoZWFkZXI6ICIoUG9zdC10b25hbCkgR2VuZXJhbCBSZXNvdXJjZXMiLAogICAgICAgIG5hdjogW3sKICAgICAgICAgIG5hbWU6ICJBbmFseXppbmcgYSBwb3N0LXRvbmFsIHBpZWNlIGZyb20gc2NyYXRjaCIsCiAgICAgICAgICBsaW5rOiAiL3Bvc3RUb25hbEFuYWx5c2lzIgogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICJBbmFseXppbmcgYXRvbmFsIG11c2ljIiwKICAgICAgICAgIGxpbms6ICIvYXRvbmFsIgogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICJBbmFseXppbmcgMTItdG9uZSBtdXNpYyIsCiAgICAgICAgICBsaW5rOiAiL3R3ZWx2ZVRvbmUiCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogIkdsb3NzYXJ5IG9mIGF0b25hbCBtdXNpY2FsIHRlcm1zIiwKICAgICAgICAgIGxpbms6ICIvYXRvbmFsR2xvc3NhcnkiCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogIlNoZWV0IG9mIGJsYW5rIGNocm9tYXRpYy1zY2FsZSBjbG9jayBmYWNlcyIsCiAgICAgICAgICBsaW5rOiAiL0dyYXBoaWNzL2JsYW5rQ2xvY2tGYWNlcy5wZGYiLAogICAgICAgICAgaHJlZjogInRydWUiCiAgICAgICAgfV0KICAgICAgfSwgewogICAgICAgIGhlYWRlcjogIihQb3AvUm9jaykgUmh5dGhtIiwKICAgICAgICBuYXY6IFt7CiAgICAgICAgICBuYW1lOiAiU3luY29wYXRpb24gaW4gcG9wL3JvY2sgbXVzaWMiLAogICAgICAgICAgbGluazogIi9zeW5jb3BhdGlvbiIKICAgICAgICB9XQogICAgICB9LCB7CiAgICAgICAgaGVhZGVyOiAiKFBvcC9Sb2NrKSBIYXJtb255IiwKICAgICAgICBuYXY6IFt7CiAgICAgICAgICBuYW1lOiAiSGFybW9ueSBpbiBwb3Avcm9jayBtdXNpYyIsCiAgICAgICAgICBsaW5rOiAiL3BvcFJvY2tIYXJtb255IgogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICJUaGUgJzUwcyBkb28td29wJyBwcm9ncmVzc2lvbiIsCiAgICAgICAgICBsaW5rOiAiL3BvcFJvY2tIYXJtb255LWRvb1dvcCIKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAiVGhlICdTaW5nZXIvU29uZ3dyaXRlcicgcHJvZ3Jlc3Npb24iLAogICAgICAgICAgbGluazogIi9wb3BSb2NrSGFybW9ueS1zc2NwIgogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICJUaGUgJ1B1ZmYnIHByb2dyZXNzaW9uIiwKICAgICAgICAgIGxpbms6ICIvcG9wUm9ja0hhcm1vbnktcHVmZiIKICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAiVGhlIGJsdWVzIHByb2dyZXNzaW9uIiwKICAgICAgICAgIGxpbms6ICIvcG9wUm9ja0hhcm1vbnktYmx1ZXMiCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogIlRoZSBsYW1lbnQgcHJvZ3Jlc3Npb24iLAogICAgICAgICAgbGluazogIi9wb3BSb2NrSGFybW9ueS1sYW1lbnQiCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogIlRoZSBjaXJjbGUtb2YtNXRocyBwcm9ncmVzc2lvbiAobWlub3IpIiwKICAgICAgICAgIGxpbms6ICIvcG9wUm9ja0hhcm1vbnktZmlmdGhzIgogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICJQbGFnYWwgcHJvZ3Jlc3Npb25zIiwKICAgICAgICAgIGxpbms6ICIvcG9wUm9ja0hhcm1vbnktcGxhZ2FsIgogICAgICAgIH1dCiAgICAgIH0sIHsKICAgICAgICBoZWFkZXI6ICIoUG9wL1JvY2spIEZvcm0iLAogICAgICAgIG5hdjogW3sKICAgICAgICAgIG5hbWU6ICJGb3JtIGluIHBvcC9yb2NrIG11c2ljIG92ZXJ2aWV3IiwKICAgICAgICAgIGxpbms6ICIvcG9wUm9ja0Zvcm0iCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogIlRlcm1pbm9sb2d5IGFuZCBiYXNpYyBjb25jZXB0cyIsCiAgICAgICAgICBsaW5rOiAiL3BvcFJvY2tGb3JtLXRlcm1zIgogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICJGb3JtYWwgY29udGFpbmVycyBhbmQgbW9kdWxlIHN0cnVjdHVyZXMiLAogICAgICAgICAgbGluazogIi9wb3BSb2NrRm9ybS1jb250YWluZXJzIgogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICJGb3JtYWwgZnVuY3Rpb25zIiwKICAgICAgICAgIGxpbms6ICIvcG9wUm9ja0Zvcm0tZnVuY3Rpb25zIgogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICJBbmFseXRpY2FsIG5vdGF0aW9uIiwKICAgICAgICAgIGxpbms6ICIvcG9wUm9ja0Zvcm0tbm90YXRpb24iCiAgICAgICAgfV0KICAgICAgfSwgewogICAgICAgIGhlYWRlcjogIihQb3AvUm9jaykgR2VuZXJhbCBSZXNvdXJjZXMiLAogICAgICAgIG5hdjogW3sKICAgICAgICAgIG5hbWU6ICJQb3AvUm9jayB0ZXJtaW5vbG9neSBhbmQgY29uY2VwdHMiLAogICAgICAgICAgbGluazogIi9wb3BSb2NrRm9ybS10ZXJtcyIKICAgICAgICB9XQogICAgICB9LCB7CiAgICAgICAgaGVhZGVyOiAiVGV4dCBhbmQgbXVzaWMiLAogICAgICAgIG5hdjogW3sKICAgICAgICAgIG5hbWU6ICJBbmFseXppbmcgcG9ldHJ5IiwKICAgICAgICAgIGxpbms6ICIvYW5hbHl6aW5nUG9ldHJ5IgogICAgICAgIH1dCiAgICAgIH0sIHsKICAgICAgICBoZWFkZXI6ICJUZWNobm9sb2d5IiwKICAgICAgICBuYXY6IFt7CiAgICAgICAgICBuYW1lOiAiVXNpbmcgVHJpbmtldCAoaW50ZXJhY3RpdmUgbXVzaWMgbm90YXRpb24pIiwKICAgICAgICAgIGxpbms6ICIvdHJpbmtldCIKICAgICAgICB9XQogICAgICB9LCB7CiAgICAgICAgaGVhZGVyOiAiVGVjaG5vbG9neSIsCiAgICAgICAgbmF2OiBbewogICAgICAgICAgbmFtZTogIlVzaW5nIFRyaW5rZXQgKGludGVyYWN0aXZlIG11c2ljIG5vdGF0aW9uKSIsCiAgICAgICAgICBsaW5rOiAiL3RyaW5rZXQiCiAgICAgICAgfV0KICAgICAgfV0KICAgIH07CiAgfQp9Ow=="},null]}