{"remainingRequest":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!K:\\Workspace\\web\\openmusic_reskin\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!K:\\Workspace\\web\\openmusic_reskin\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!K:\\Workspace\\web\\openmusic_reskin\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!K:\\Workspace\\web\\openmusic_reskin\\docs\\schemataContinuationPatterns.md?vue&type=template&id=4bd0b182&","dependencies":[{"path":"K:\\Workspace\\web\\openmusic_reskin\\docs\\schemataContinuationPatterns.md","mtime":1588048792043},{"path":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1587210169665},{"path":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1587210169956},{"path":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1587210169665},{"path":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\vue-loader\\lib\\index.js","mtime":1587210169956},{"path":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":1587210169867}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}