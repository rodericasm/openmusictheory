{"remainingRequest":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!K:\\Workspace\\web\\openmusic_reskin\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!K:\\Workspace\\web\\openmusic_reskin\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!K:\\Workspace\\web\\openmusic_reskin\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!K:\\Workspace\\web\\openmusic_reskin\\docs\\trinket.md?vue&type=template&id=d810ada8&","dependencies":[{"path":"K:\\Workspace\\web\\openmusic_reskin\\docs\\trinket.md","mtime":1588366805162},{"path":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgIkNvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yIiwKICAgIHsgYXR0cnM6IHsgInNsb3Qta2V5IjogX3ZtLiRwYXJlbnQuc2xvdEtleSB9IH0sCiAgICBbCiAgICAgIF9jKCJpZnJhbWUiLCB7CiAgICAgICAgc3RhdGljQ2xhc3M6ICJ0cmlua2V0IiwKICAgICAgICBhdHRyczogewogICAgICAgICAgc3JjOiAiaHR0cHM6Ly90cmlua2V0LmlvL2VtYmVkL211c2ljL2EwODllOTg3Y2EiLAogICAgICAgICAgd2lkdGg6ICIxMDAlIiwKICAgICAgICAgIGhlaWdodDogIjMwMCIsCiAgICAgICAgICBmcmFtZWJvcmRlcjogIjAiLAogICAgICAgICAgbWFyZ2lud2lkdGg6ICIwIiwKICAgICAgICAgIG1hcmdpbmhlaWdodDogIjAiLAogICAgICAgICAgYWxsb3dmdWxsc2NyZWVuOiAiIgogICAgICAgIH0KICAgICAgfSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfYygKICAgICAgICAgICJlbSIsCiAgICAgICAgICBbCiAgICAgICAgICAgIF92bS5fdigiRXJyb3ItZGV0ZWN0aW9uIGV4ZXJjaXNlIGZyb20gIiksCiAgICAgICAgICAgIF9jKCJSb3V0ZXJMaW5rIiwgeyBhdHRyczogeyB0bzogIi9maXJzdFNwZWNpZXMuaHRtbCIgfSB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCJDb21wb3NpbmcgYSBmaXJzdC1zcGVjaWVzIGNvdW50ZXJwb2ludCIpCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfdm0uX3YoIi4iKQogICAgICAgICAgXSwKICAgICAgICAgIDEKICAgICAgICApCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgaHJlZjogImh0dHA6Ly90cmlua2V0LmlvIiwKICAgICAgICAgICAgICB0YXJnZXQ6ICJfYmxhbmsiLAogICAgICAgICAgICAgIHJlbDogIm5vb3BlbmVyIG5vcmVmZXJyZXIiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCJUcmlua2V0IiksIF9jKCJPdXRib3VuZExpbmsiKV0sCiAgICAgICAgICAxCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiIGlzIGEgbmV3IHRvb2wgZm9yIGludGVyYWN0aXZlIG11c2ljIG5vdGF0aW9uIG9uIHRoZSB3ZWIuIEl0IGNhbiBiZSBhZGRlZCB0byBhbnkgd2Vic2l0ZSB0aGF0IHN1cHBvcnRzIGlGcmFtZXMsIGFuZCB0aGVyZSBhcmUgc2V2ZXJhbCBtdXNpYyB0cmlua2V0cyBlbWJlZGRlZCBpbiBPcGVuIE11c2ljIFRoZW9yeSAod2l0aCBtb3JlIG9uIHRoZSB3YXkgYXMgdGhlIHRleHRib29rIGdyb3dzKS4iCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMiIsIHsgYXR0cnM6IHsgaWQ6ICJub3RhdGlvbi1ndWlkZSIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIjbm90YXRpb24tZ3VpZGUiIH0gfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIE5vdGF0aW9uIGd1aWRlIikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiTXVzaWMgbm90YXRpb24gaXMgY3JlYXRlZCBieSBlbnRlcmluZyB0ZXh0IGludG8gYSBib3ggYXQgdGhlIGJvdHRvbSBvZiB0aGUgdHJpbmtldC4gVHJpbmtldHMgb2ZmZXIgYSBsaW1pdGVkIHNldCBvZiBtdXNpY2FsIGZlYXR1cmVzLCBpbiBvcmRlciB0byBrZWVwIHRoaW5ncyBzaW1wbGUuIFRoZSB0ZXh0IHJlcXVpcmVkIGZvciB0aGVzZSBmZWF0dXJlcyBpcyBwcm92aWRlZCBiZWxvdy4gTW9zdCBvZiB0aGVzZSBmZWF0dXJlcyBhcmUgaW5jbHVkZWQgaW4gdGhlIGV4YW1wbGUgdHJpbmtldCBhdCB0aGUgYm90dG9tIG9mIHRoaXMgcGFnZS4iCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMyIsIHsgYXR0cnM6IHsgaWQ6ICJwaXRjaCIgfSB9LCBbCiAgICAgICAgX2MoImEiLCB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIjcGl0Y2giIH0gfSwgWwogICAgICAgICAgX3ZtLl92KCIjIikKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiBQaXRjaCIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgJ1BpdGNoIGNsYXNzZXMgYXJlIGRlc2lnbmF0ZWQgYnkgdGhlaXIgbGV0dGVyIG5hbWVzIGZvbGxvd2VkIGJ5IC0gZm9yIGZsYXQsICMgZm9yIHNoYXJwLCBvciAibiIgZm9yIG5hdHVyYWwuIFJlc3RzIGFyZSBkZXNpZ25hdGVkIGJ5ICJyIi4nCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJJbiBvcmRlciB0byBhdm9pZCBjb25mdXNpb24gd2l0aCByaHl0aG1pYyBudW1iZXJzLCB0cmlua2V0IHVzZXMgYSB2ZXJzaW9uIG9mIHRoZSBIZWxtaG9sdHogcmVnaXN0ZXIgZGVzaWduYXRpb24uIFNvIElTTyBPY3RhdmUgNCAobWlkZGxlIEMgdXAgdG8gdGhlIEIgYWJvdmUgaXQpIHVzZXMgbG93ZXIgY2FzZSBsZXR0ZXJzOiIKICAgICAgICApCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJsYW5ndWFnZS0gZXh0cmEtY2xhc3MiIH0sIFsKICAgICAgICBfYygicHJlIiwgW19jKCJjb2RlIiwgW192bS5fdigiYyBkIGUgZiBnIGEgYlxuIildKV0pCiAgICAgIF0pLAogICAgICBfYygicCIsIFtfdm0uX3YoIklTTyBPY3RhdmUgNSBhZGRzIHByaW1lczoiKV0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJsYW5ndWFnZS0gZXh0cmEtY2xhc3MiIH0sIFsKICAgICAgICBfYygicHJlIiwgW19jKCJjb2RlIiwgW192bS5fdigiYycgZCcgZScgZicgZycgYScgYidcbiIpXSldKQogICAgICBdKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIklTTyBPY3RhdmUgNiB0YWtlcyB0d28gcHJpbWVzIChjJycpLCBPY3RhdmUgNyB0aHJlZSBwcmltZXMgKGMnJycpLCBldGMuIgogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoIk9jdGF2ZSAzIChpbW1lZGlhdGVseSBiZWxvdyBtaWRkbGUgQykgdXNlcyBjYXBpdGFsIGxldHRlcnM6IikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImxhbmd1YWdlLSBleHRyYS1jbGFzcyIgfSwgWwogICAgICAgIF9jKCJwcmUiLCBbX2MoImNvZGUiLCBbX3ZtLl92KCJDIEQgRSBGIEcgQSBCXG4iKV0pXSkKICAgICAgXSksCiAgICAgIF9jKCJwIiwgW192bS5fdigiT2N0YXZlIDIgdXNlcyB0d28gY2FwaXRhbCBsZXR0ZXJzOiIpXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImxhbmd1YWdlLSBleHRyYS1jbGFzcyIgfSwgWwogICAgICAgIF9jKCJwcmUiLCBbX2MoImNvZGUiLCBbX3ZtLl92KCJDQyBERCBFRSBGRiBHRyBBQSBCQlxuIildKV0pCiAgICAgIF0pLAogICAgICBfYygicCIsIFtfdm0uX3YoIkFuZCBzbyBvbi4iKV0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgzIiwgeyBhdHRyczogeyBpZDogInJoeXRobSIgfSB9LCBbCiAgICAgICAgX2MoImEiLCB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIjcmh5dGhtIiB9IH0sIFsKICAgICAgICAgIF92bS5fdigiIyIpCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgUmh5dGhtIikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiUmh5dGhtcyBhcmUgZGVzaWduYXRlZCBieSBudW1iZXJzIHJlcHJlc2VudGluZyBub3RlIHZhbHVlc+KAlDIgZm9yIGhhbGYgbm90ZSwgNCBmb3IgcXVhcnRlciBub3RlLCBldGMu4oCUYW5kIHBlcmlvZHMgZm9yIGRvdHRlZCBub3Rlc+KAlDIuIGZvciBkb3R0ZWQgaGFsZiBub3RlLCA0Li4gZm9yIGRvdWJseSBkb3R0ZWQgcXVhcnRlciBub3RlLCBldGMuIFRoZXNlIG51bWJlcnMgaW1tZWRpYXRlbHkgZm9sbG93IHRoZSBwaXRjaGVzLiIKICAgICAgICApCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIlRpZXMgYXJlIGRlbm90ZWQgYnkgcGxhY2luZyBhIH4gaW1tZWRpYXRlbHkgYWZ0ZXIgdGhlIHJoeXRobWljIHZhbHVlLiIKICAgICAgICApCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgzIiwgeyBhdHRyczogeyBpZDogImNob3JkcyIgfSB9LCBbCiAgICAgICAgX2MoImEiLCB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIjY2hvcmRzIiB9IH0sIFsKICAgICAgICAgIF92bS5fdigiIyIpCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgQ2hvcmRzIikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiVG8gbWFrZSBhIGNob3JkLCBzaW1wbHkgcHV0IHR3byBvciBtb3JlIG5vdGVzIHdpdGhpbiBhbmdsZWQgYnJhY2tldHMgKGFuZCBwdXQgdGhlIHJoeXRobSBvdXRzaWRlIHRoZSBicmFja2V0KS4iCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIiB9LCBbCiAgICAgICAgX2MoInByZSIsIFtfYygiY29kZSIsIFtfdm0uX3YoIjxjIGUgZz40LiA8ZCBmPjhcbiIpXSldKQogICAgICBdKSwKICAgICAgX2MoImgzIiwgeyBhdHRyczogeyBpZDogImx5cmljcyIgfSB9LCBbCiAgICAgICAgX2MoImEiLCB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIjbHlyaWNzIiB9IH0sIFsKICAgICAgICAgIF92bS5fdigiIyIpCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgTHlyaWNzIikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiV2hlbiB1c2luZyBseXJpY3MsIHNpbXBsZSB0eXBlIGx5cmljcyAob3IgYW5hbHl0aWNhbCBub3RhdGlvbikgaW50byB0aGUgbHlyaWMgYm94LiBVc2UgYSBzcGFjZSB0byBtb3ZlIG9uIHRvIHRoZSBuZXh0IG5vdGUuIFdoZW4gc2tpcHBpbmcgYSBub3RlLCBwdXQgYSB+IGZvciB0aGUgbm90ZXMgdGhhdCBkb24ndCB0YWtlIGx5cmljcy4iCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMyIsIHsgYXR0cnM6IHsgaWQ6ICJleGFtcGxlIiB9IH0sIFsKICAgICAgICBfYygiYSIsIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwgYXR0cnM6IHsgaHJlZjogIiNleGFtcGxlIiB9IH0sIFsKICAgICAgICAgIF92bS5fdigiIyIpCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgRXhhbXBsZSIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIkhlcmUgaXMgYW4gZXhhbXBsZSB0aGF0IHVzZXMgbWFueSBvZiB0aGUgZmVhdHVyZXMgbGlzdGVkIGFib3ZlLiAoSW50ZXJuYXRpb25hbCByZWFkZXJzLCBwbGVhc2UgZm9yZ2l2ZSB0aGUgbW92YWJsZS1kbyEpIgogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaWZyYW1lIiwgewogICAgICAgIGF0dHJzOiB7CiAgICAgICAgICBzcmM6ICJodHRwczovL3RyaW5rZXQuaW8vZW1iZWQvbXVzaWMvOTFjNjczZGY3YyIsCiAgICAgICAgICB3aWR0aDogIjEwMCUiLAogICAgICAgICAgaGVpZ2h0OiAiMjYwIiwKICAgICAgICAgIGZyYW1lYm9yZGVyOiAiMCIsCiAgICAgICAgICBtYXJnaW53aWR0aDogIjAiLAogICAgICAgICAgbWFyZ2luaGVpZ2h0OiAiMCIsCiAgICAgICAgICBhbGxvd2Z1bGxzY3JlZW46ICIiCiAgICAgICAgfQogICAgICB9KQogICAgXQogICkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW10KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}