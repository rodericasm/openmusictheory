{"remainingRequest":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!K:\\Workspace\\web\\openmusic_reskin\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!K:\\Workspace\\web\\openmusic_reskin\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!K:\\Workspace\\web\\openmusic_reskin\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!K:\\Workspace\\web\\openmusic_reskin\\docs\\setClassAndPrimeForm1.md?vue&type=template&id=589109b4&","dependencies":[{"path":"K:\\Workspace\\web\\openmusic_reskin\\docs\\setClassAndPrimeForm1.md","mtime":1588360682754},{"path":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgIkNvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yIiwKICAgIHsgYXR0cnM6IHsgInNsb3Qta2V5IjogX3ZtLiRwYXJlbnQuc2xvdEtleSB9IH0sCiAgICBbCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICdMb3RzIG9mIGNvbmNlcHRzIGluIHBpdGNoLWNsYXNzIHNldCB0aGVvcnkgYXJlIGJlc3Qgdmlld2VkIGFsb25nIGEgc2xpZGluZyBzY2FsZSBvZiAiY29uY3JldGVuZXNzIiBvciAiYWJzdHJhY3RuZXNzLiIgQSBjb25jZXB0IGxpa2UgJwogICAgICAgICksCiAgICAgICAgX2MoImVtIiwgW192bS5fdigicGl0Y2giKV0pLAogICAgICAgIF92bS5fdigiLCBmb3IgZXhhbXBsZSwgaXMgdmVyeSBjb25jcmV0ZSwgd2hpbGUgIiksCiAgICAgICAgX2MoImVtIiwgW192bS5fdigicGl0Y2ggY2xhc3MiKV0pLAogICAgICAgIF92bS5fdigKICAgICAgICAgICIgaXMgc29tZXdoYXQgbW9yZSBhYnN0cmFjdC4gV2UgY2FuIHBlcmZvcm0gYSBwaXRjaCwgYnV0IHdlIGNhbid0IHJlYWxseSBwZXJmb3JtIGEgcGl0Y2ggY2xhc3MuIFdlJ3ZlIHNlZW4gc2ltaWxhciBleGFtcGxlcyBpbiB0aGUgaW50ZXJ2YWxsaWMgcmVhbG0uIE9yZGVyZWQgcGl0Y2ggaW50ZXJ2YWxzIGFyZSBhc3NvY2lhdGVkIHdpdGggYSB2ZXJ5IHNwZWNpZmljIHNvdW5kIChlLmcuLCArMTUpOyB1bm9yZGVyZWQgcGl0Y2gtY2xhc3MgaW50ZXJ2YWxzIChlLmcuLCBpbnRlcnZhbCBjbGFzcyAxKSBhcmUgbGVzcyB2aXZpZCBvciByZWFsLiBBIGJhc2ljIGNvbmNlcHQgaW4gcGl0Y2gtY2xhc3Mgc2V0IHRoZW9yeSBpcyB0aGF0IHRoZXNlIGxldmVscyBvZiBjb25jcmV0ZW5lc3MgYW5kIGFic3RyYWN0bmVzcyBlbmNvbXBhc3Mgbm90IG9ubHkgcGl0Y2ggYW5kIGludGVydmFsLCBidXQgZ3JvdXBzIG9mIHBpdGNoIGNsYXNzZXMgYXMgd2VsbC4gVGhlc2UgZ3JvdXBzIG9mIHBpdGNoIGNsYXNzZXMgYXJlIGNhbGxlZCAiCiAgICAgICAgKSwKICAgICAgICBfYygiZW0iLCBbX3ZtLl92KCJwaXRjaC1jbGFzcyBzZXRzIildKSwKICAgICAgICBfdm0uX3YoIi4iKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKAogICAgICAgICJwIiwKICAgICAgICBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICJXZSd2ZSBhbHJlYWR5IHNlZW4gc2V0cyBvZiBwaXRjaC1jbGFzc2VzLCB0aG91Z2ggd2UgaGF2ZW4ndCByZWFsbHkgYmVlbiBjYWxsaW5nIHRoZW0gdGhhdC4gV2hlbiB3ZSBleHRyYWN0IGEgZ3JvdXAgb2Ygbm90ZXMgZnJvbSBhIHBhc3NhZ2Ugb2YgbXVzaWMgYW5kIHB1dCB0aGVtIGluICIKICAgICAgICAgICksCiAgICAgICAgICBfYygiUm91dGVyTGluayIsIHsgYXR0cnM6IHsgdG86ICIvbm9ybWFsT3JkZXIuaHRtbCIgfSB9LCBbCiAgICAgICAgICAgIF92bS5fdigibm9ybWFsIG9yZGVyIikKICAgICAgICAgIF0pLAogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiLCB0aGF0IGdyb3VwIG9mIG5vdGVzIGlzIGEgcGl0Y2gtY2xhc3Mgc2V0LiBBcyB3ZSd2ZSBzZWVuIGluIGNsYXNzLCBvbmUgdmVyeSBpbnRlcmVzdGluZyB3YXkgb2YgbG9va2luZyBhdCBhIGxvdCBvZiBwb3N0LXRvbmFsIG11c2ljIGlzIGJ5IHN0dWR5aW5nIHRoZSAiCiAgICAgICAgICApLAogICAgICAgICAgX2MoIlJvdXRlckxpbmsiLCB7IGF0dHJzOiB7IHRvOiAiL3RyYW5zcG9zaXRpb24uaHRtbCIgfSB9LCBbCiAgICAgICAgICAgIF92bS5fdigidHJhbnNwb3NpdGlvbmFsIikKICAgICAgICAgIF0pLAogICAgICAgICAgX3ZtLl92KCIgYW5kICIpLAogICAgICAgICAgX2MoIlJvdXRlckxpbmsiLCB7IGF0dHJzOiB7IHRvOiAiL2ludmVyc2lvbi5odG1sIiB9IH0sIFsKICAgICAgICAgICAgX3ZtLl92KCJpbnZlcnNpb25hbCIpCiAgICAgICAgICBdKSwKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgIiByZWxhdGlvbnNoaXBzIGJldHdlZW4gcGl0Y2gtY2xhc3Mgc2V0cy4gSW4gdGhlIHNob3J0IGV4YW1wbGUgYmVsb3cgKGZyb20gQmFydMOzaydzIFwiU3ViamVjdCBhbmQgUmVmbGVjdGlvblwiKSB5b3UnbGwgbm90aWNlIHRoYXQgdGhlIHJpZ2h0IGhhbmQgb2YgdGhlIHR3byBwYXNzYWdlcyBpcyAiCiAgICAgICAgICApLAogICAgICAgICAgX2MoImVtIiwgW192bS5fdigiVDUiKV0pLAogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiLXJlbGF0ZWQsIGFzIGlzIHRoZSBsZWZ0LWhhbmQuIFdpdGhpbiBlYWNoIHBhc3NhZ2UsIHRoZSByaWdodCBhbmQgbGVmdCBoYW5kcyBhcmUgIgogICAgICAgICAgKSwKICAgICAgICAgIF9jKCJlbSIsIFtfdm0uX3YoIlQ4SSBfYW5kIF9UNkkiKV0pLAogICAgICAgICAgX3ZtLl92KCIgcmVsYXRlZCwgcmVzcGVjdGl2ZWx5LiIpCiAgICAgICAgXSwKICAgICAgICAxCiAgICAgICksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgc3JjOiAiR3JhcGhpY3MvcG9zdFRvbmFsL3N1YmplY2R0QW5kUmVmbGVjdGlvbi5wbmciLAogICAgICAgICAgICBhbHQ6ICIiCiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfYygiZW0iLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICJJbiBvcmRlciBmb3IgYSBwaXRjaC1jbGFzcyBzZXQgdG8gYmUgdHJhbnNwb3NpdGlvbmFsbHkgb3IgaW52ZXJzaW9uYWxseSByZWxhdGVkIHRvIHNvbWUgb3RoZXIgcGl0Y2ggY2xhc3Mgc2V0LCB0aGV5IG11c3Qgc2hhcmUgdGhlIHNhbWUgY29sbGVjdGlvbiBvZiBpbnRlcnZhbHMiCiAgICAgICAgICApCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIi4gVGhpcyBpcyBtb3N0IGVhc2lseSBncmFzcGVkIGJ5IHJlbWVtYmVyaW5nIHRoYXQgYWxsIG1ham9yIGFuZCBtaW5vciB0cmlhZHMgaGF2ZSB0aGUgc2FtZSBpbnRlcnZhbCBjb250ZW50IChNMywgbTMsIGFuZCBQNSkuIE1ham9yIHRyaWFkcyBhcmUgdHJhbnNwb3NpdGlvbmFsbHkgcmVsYXRlZCB0byBvbmUgYW5vdGhlciwgd2hpbGUgbWFqb3IgYW5kIG1pbm9yIHRyaWFkcyBhcmUgaW52ZXJzaW9uYWxseSByZWxhdGVkIHRvIG9uZSBhbm90aGVyLiBUaGUgc2FtZSBvYnNlcnZhdGlvbiBhcHBsaWVzIGluIEJhcnTDs2sncyBcIlN1YmplY3QgYW5kIFJlZmxlY3Rpb24uXCIgVGhlIGZvdXIgcGl0Y2gtY2xhc3Mgc2V0cyBpbiB0aG9zZSB0d28gcGFzc2FnZXMgYWxsIGhhdmUgdGhlIHNhbWUgaW50ZXJ2YWxsaWMgY29udGVudCBhbmQgdGhhdCdzIHdoeSB3ZSBjYW4gbGFiZWwgdHJhbnNwb3NpdGlvbmFsIGFuZCBpbnZlcnNpb25hbCByZWxhdGlvbnNoaXBzIGJldHdlZW4gdGhlbS4iCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJBbGwgcGl0Y2gtY2xhc3Mgc2V0cyB0aGF0IGFyZSB0cmFuc3Bvc2l0aW9uYWxseSBhbmQgaW52ZXJzaW9uYWxseSByZWxhdGVkIGJlbG9uZyB0byB0aGUgc2FtZSAiCiAgICAgICAgKSwKICAgICAgICBfYygiZW0iLCBbX3ZtLl92KCJzZXQgY2xhc3MiKV0pLAogICAgICAgIF92bS5fdigiLCBhbmQgdGhleSBhcmUgcmVwcmVzZW50ZWQgYnkgdGhlIHNhbWUgIiksCiAgICAgICAgX2MoImVtIiwgW192bS5fdigicHJpbWUgZm9ybSIpXSksCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIi4gV2UgZm9sbG93IGEgc2ltcGxlIHByb2Nlc3MgdG8gcHV0IGEgcGl0Y2gtY2xhc3Mgc2V0IGluIHByaW1lIGZvcm06IgogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygib2wiLCBbCiAgICAgICAgX2MoImxpIiwgW192bS5fdigiUHV0IHRoZSBwaXRjaC1jbGFzcyBzZXQgaW4gbm9ybWFsIG9yZGVyLiIpXSksCiAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgX2MoImxpIiwgW192bS5fdigiVHJhbnNwb3NlIGl0IHNvIHRoYXQgdGhlIGZpcnN0IHBpdGNoIGNsYXNzIGlzIDAuIildKSwKICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICJJbnZlcnQgdGhlIHJlc3VsdHMgZnJvbSBzdGVwIDIgKGFueSBpbnZlcnNpb24gd2lsbCB3b3JrKSBhbmQgcHV0IHRoZSByZXN1bHQgaW4gbm9ybWFsIG9yZGVyLiIKICAgICAgICAgICkKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICBfYygibGkiLCBbX3ZtLl92KCJUcmFuc3Bvc2UgaXQgc28gdGhhdCB0aGUgZmlyc3QgcGl0Y2ggY2xhc3MgaXMgMC4iKV0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgIkNvbXBhcmUgdGhlIHJlc3VsdHMgb2Ygc3RlcHMgKDIpIGFuZCAoNCkuIFByaW1lIGZvcm0gaXMgdGhlIG1vc3QgY29tcGFjdCB2ZXJzaW9uLiIKICAgICAgICAgICkKICAgICAgICBdKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICdUaGUgZXhhbXBsZSBiZWxvdyB3YWxrcyBkZW1vbnN0cmF0ZXMgdXNpbmcgdGhlIG1vdGl2ZSBmcm9tIEJhcnTDs2tcJ3MgIlN1YmplY3QgYW5kIFJlZmxlY3Rpb24uIicKICAgICAgICApCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgIGF0dHJzOiB7IHNyYzogIkdyYXBoaWNzL3Bvc3RUb25hbC9wcmltZUZvcm0ucG5nIiwgYWx0OiAiIiB9CiAgICAgICAgfSkKICAgICAgXSkKICAgIF0KICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}