{"remainingRequest":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!K:\\Workspace\\web\\openmusic_reskin\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!K:\\Workspace\\web\\openmusic_reskin\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!K:\\Workspace\\web\\openmusic_reskin\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!K:\\Workspace\\web\\openmusic_reskin\\docs\\popRockForm-terms.md?vue&type=template&id=bd78bea2&","dependencies":[{"path":"K:\\Workspace\\web\\openmusic_reskin\\docs\\popRockForm-terms.md","mtime":1588366441927},{"path":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgIkNvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yIiwKICAgIHsgYXR0cnM6IHsgInNsb3Qta2V5IjogX3ZtLiRwYXJlbnQuc2xvdEtleSB9IH0sCiAgICBbCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJUaGlzIGRvY3VtZW50IGlzIGEgZ2xvc3Nhcnkgb2YgdGVybXMgYW5kIGNvbmNlcHRzIHRoYXQgd2Ugd2lsbCB1c2UgaW4gb3VyIGFuYWx5c2lzIG9mIHBvcC9yb2NrIG11c2ljLiBUZXJtcywgY29uY2VwdHMsIGRlZmluaXRpb25zLCBhbmQgbm90YXRpb25hbCBndWlkZWxpbmVzIGluIHRoaXMgZG9jdW1lbnQgYXJlIHRha2VuIGVpdGhlciBmcm9tIGNvbW1vbiBjb252ZW50aW9uOyB0aGUgcHVibGlzaGVkIG9yIHVucHVibGlzaGVkIHdvcmsgb2YgSmFzb24gU3VtbWFjaCwgSm9obiBDb3ZhY2gsIFdhbHRlciBFdmVyZXR0LCBNYXJrIFNwaWNlciwgb3IgRGFuaWVsIEhhcnJpc29uOyBvciBzb21lIGNvbWJpbmF0aW9uIHRoZXJlb2YuIgogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDIiLCB7IGF0dHJzOiB7IGlkOiAicG9ldGljLXRlcm1pbm9sb2d5IiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiNwb2V0aWMtdGVybWlub2xvZ3kiIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiBQb2V0aWMgdGVybWlub2xvZ3kiKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMyIsIHsgYXR0cnM6IHsgaWQ6ICJmb290IiB9IH0sIFsKICAgICAgICBfYygiYSIsIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwgYXR0cnM6IHsgaHJlZjogIiNmb290IiB9IH0sIFsKICAgICAgICAgIF92bS5fdigiIyIpCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgRm9vdCIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIkEgY29tYmluYXRpb24gb2YgdHdvIG9yIHRocmVlIHN5bGxhYmxlczogdHlwaWNhbGx5IG9uZSBzdHJlc3NlZCBzeWxsYWJsZSwgYW5kIG9uZSBvciB0d28gdW5zdHJlc3NlZCBzeWxsYWJsZXMuIENvbW1vbiBwb2V0aWMgZmVldCBpbmNsdWRlIHRoZSAiCiAgICAgICAgKSwKICAgICAgICBfYygiZW0iLCBbX3ZtLl92KCJpYW1iIildKSwKICAgICAgICBfdm0uX3YoIiAodW5zdHJlc3NlZCDigJMgc3RyZXNzZWQpLCB0aGUgIiksCiAgICAgICAgX2MoImVtIiwgW192bS5fdigidHJvY2hlZSIpXSksCiAgICAgICAgX3ZtLl92KCIgKHN0cmVzc2VkIOKAkyB1bnN0cmVzc2VkKSwgdGhlICIpLAogICAgICAgIF9jKCJlbSIsIFtfdm0uX3YoInNwb25kZWUiKV0pLAogICAgICAgIF92bS5fdigiICh0d28gc3RyZXNzZWQgc3lsbGFibGVzIGluIGEgcm93KSwgdGhlICIpLAogICAgICAgIF9jKCJlbSIsIFtfdm0uX3YoImFuYXBlc3QiKV0pLAogICAgICAgIF92bS5fdigiIChzdHJlc3NlZCDigJMgc3RyZXNzZWQg4oCTIHVuc3RyZXNzZWQpLCBhbmQgdGhlICIpLAogICAgICAgIF9jKCJlbSIsIFtfdm0uX3YoImRhY3R5bCIpXSksCiAgICAgICAgX3ZtLl92KCIgKHN0cmVzc2VkIOKAkyB1bnN0cmVzc2VkIOKAkyB1bnN0cmVzc2VkLikiKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMyIsIHsgYXR0cnM6IHsgaWQ6ICJsaW5lIiB9IH0sIFsKICAgICAgICBfYygiYSIsIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwgYXR0cnM6IHsgaHJlZjogIiNsaW5lIiB9IH0sIFsKICAgICAgICAgIF92bS5fdigiIyIpCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgTGluZSIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIkEgZ3JvdXAgb2YgcG9ldGljIGZlZXQgZnVuY3Rpb25pbmcgYXMgYSBzaW5nbGUgdW5pdC4gRWFjaCBwb2V0aWMgbGluZSBpcyBnaXZlbiBpdHMgb3duIGxpbmUgYXMgcHJpbnRlZC93cml0dGVuIHRleHQuIElmIHRoZSBsaW5lIGlzIHBhcnQgb2Ygcmh5bWluZyBwb2V0cnksIHRoZSBsYXN0IHN5bGxhYmxlL2Zvb3QgcGFydGljaXBhdGVzIGluIGEgcmh5bWUgd2l0aCBhbm90aGVyIGxpbmUuIChJbnRlcm5hbCByaHltZSBpcyBhbHNvIHBvc3NpYmxlLikiCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMyIsIHsgYXR0cnM6IHsgaWQ6ICJjb3VwbGV0IiB9IH0sIFsKICAgICAgICBfYygiYSIsIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwgYXR0cnM6IHsgaHJlZjogIiNjb3VwbGV0IiB9IH0sIFsKICAgICAgICAgIF92bS5fdigiIyIpCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgQ291cGxldCIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIkEgcGFpciBvZiBsaW5lcy4gSWYgcG9ldHJ5IGlzIHJoeW1pbmcsIHRoZSB0d28gbGluZXMgbWFraW5nIHVwIGEgY291cGxldCB0eXBpY2FsbHkgcmh5bWUgd2l0aCBlYWNoIG90aGVyLiBUaGV5IG1heSBhbHNvIHBhcnRpY2lwYXRlIGluIGEgbGFyZ2VyIHJoeW1lIHNjaGVtZSAoc2VlIHF1YXRyYWluIGJlbG93KS4iCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMyIsIHsgYXR0cnM6IHsgaWQ6ICJxdWF0cmFpbiIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIjcXVhdHJhaW4iIH0gfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIFF1YXRyYWluIikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiQSBwYWlyIG9mIGNvdXBsZXRzIChpLmUuLCBmb3VyIGxpbmVzKS4gQ29tbW9uIHF1YXRyYWluIHJoeW1lIHNjaGVtZXMgYXJlICIKICAgICAgICApLAogICAgICAgIF9jKCJlbSIsIFtfdm0uX3YoImFhYmIiKV0pLAogICAgICAgIF92bS5fdigiLCAiKSwKICAgICAgICBfYygiZW0iLCBbX3ZtLl92KCJhYmFiIildKSwKICAgICAgICBfdm0uX3YoIiwgIiksCiAgICAgICAgX2MoImVtIiwgW192bS5fdigiYWJjYiIpXSksCiAgICAgICAgX3ZtLl92KCIuIikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDMiLCB7IGF0dHJzOiB7IGlkOiAic3RhbnphIiB9IH0sIFsKICAgICAgICBfYygiYSIsIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwgYXR0cnM6IHsgaHJlZjogIiNzdGFuemEiIH0gfSwgWwogICAgICAgICAgX3ZtLl92KCIjIikKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiBTdGFuemEiKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJBIHNldCBvZiBwb2V0aWMgbGluZXMgdGhhdCB3b3JrIHRvZ2V0aGVyIGFzIGEgc2luZ2xlIG5hcnJhdGl2ZSB1bml0LiBUeXBpY2FsbHkgb25lIG9yIG1vcmUgcXVhdHJhaW5zIChpLmUuLCB0b3RhbCBudW1iZXIgb2YgbGluZXMgYXJlIGEgbXVsdGlwbGUgb2YgZm91cikuIgogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDMiLCB7IGF0dHJzOiB7IGlkOiAiZXhhbXBsZSIgfSB9LCBbCiAgICAgICAgX2MoImEiLCB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIjZXhhbXBsZSIgfSB9LCBbCiAgICAgICAgICBfdm0uX3YoIiMiKQogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiIEV4YW1wbGUiKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICdGb2xsb3dpbmcgaXMgYSBzdGFuemEgZnJvbSBVMiwgIlByaWRlIChJbiB0aGUgTmFtZSBvZiBMb3ZlKS4iIFRoaXMgc3RhbnphIGlzIGEgcXVhdHJhaW4gY29tcG9zZWQgb2YgZm91ciBsaW5lcy4gVGhlIGZpcnN0IGFuZCB0aGlyZCBsaW5lcyBoYXZlIGZvdXIgZmVldCAodGhhdCBpcywgZm91ciBzdHJlc3NlZCBzeWxsYWJsZXMpIHdpdGggaXJyZWd1bGFyIHJoeXRobS4gVGhlIHNlY29uZCBhbmQgZm91cnRoIGxpbmVzIGhhdmUgdGhyZWUgZmVldCB3aXRoIGlycmVndWxhciByaHl0aG0sIGFuZCB0aGV5IHJoeW1lIHdpdGggZWFjaCBvdGhlci4nCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJibG9ja3F1b3RlIiwgWwogICAgICAgIF9jKCJwIiwgWwogICAgICAgICAgX3ZtLl92KCJPbmUgbWFuIGNvbWUgaW4gdGhlIG5hbWUgb2YgbG92ZS4iKSwKICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgX3ZtLl92KCJcbk9uZSBtYW4gY29tZSBhbmQgZ28uIiksCiAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgIF92bS5fdigiXG5PbmUgbWFuIGNvbWUsIGhlIHRvIGp1c3RpZnkuIiksCiAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgIF92bS5fdigiXG5PbmUgbWFuIHRvIG92ZXJ0aHJvdy4iKQogICAgICAgIF0pCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgzIiwgeyBhdHRyczogeyBpZDogIm90aGVyLXN0cnVjdHVyZXMiIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgICAgICAgICBhdHRyczogeyBocmVmOiAiI290aGVyLXN0cnVjdHVyZXMiIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiBPdGhlciBzdHJ1Y3R1cmVzIikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiRm9yIG1vcmUgcG9ldGljIHN0cnVjdHVyZXMgYW5kIHRlcm1zLCBzZWUgVmFuaWVyIENvbGxlZ2UncyByZXNvdXJjZSwgIgogICAgICAgICksCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgaHJlZjoKICAgICAgICAgICAgICAgICJodHRwOi8vd3d3LnZhbmllcmNvbGxlZ2UucWMuY2EvdGxjLy90aXBzaGVldHMvcmVhZGluZy1hbmQtYW5hbHl6aW5nL3BvZW0tZm9ybS1hbmQtc3RydWN0dXJlLnBkZiIsCiAgICAgICAgICAgICAgdGFyZ2V0OiAiX2JsYW5rIiwKICAgICAgICAgICAgICByZWw6ICJub29wZW5lciBub3JlZmVycmVyIgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiUG9ldHJ5J3MgU3RydWN0dXJlIGFuZCBGb3JtIiksIF9jKCJPdXRib3VuZExpbmsiKV0sCiAgICAgICAgICAxCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIi4iKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMiIsIHsgYXR0cnM6IHsgaWQ6ICJkZXNjcmlwdG9ycy1yaGV0b3JpY2FsLWRldmljZXMiIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgICAgICAgICBhdHRyczogeyBocmVmOiAiI2Rlc2NyaXB0b3JzLXJoZXRvcmljYWwtZGV2aWNlcyIgfQogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIERlc2NyaXB0b3JzICYgcmhldG9yaWNhbCBkZXZpY2VzIikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDMiLCB7IGF0dHJzOiB7IGlkOiAibHlyaWMtdmFyaWFudCIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIjbHlyaWMtdmFyaWFudCIgfSB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgTHlyaWMtdmFyaWFudCIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIkEgbW9kdWxlIG9yIHBocmFzZSBpcyBseXJpYy12YXJpYW50IGlmIGVhY2ggdGltZSBpdCBhcHBlYXJzIGl0IGJyaW5ncyAobW9zdGx5KSBkaWZmZXJlbnQgbHlyaWNzLiIKICAgICAgICApCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgyIiwgeyBhdHRyczogeyBpZDogImx5cmljLWludmFyaWFudCIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIjbHlyaWMtaW52YXJpYW50IiB9IH0sCiAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiBMeXJpYy1pbnZhcmlhbnQiKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJBIG1vZHVsZSBvciBwaHJhc2UgaXMgbHlyaWMtaW52YXJpYW50IGlmIGVhY2ggdGltZSBpdCBhcHBlYXJzIGl0IGJyaW5ncyAobW9zdGx5KSB0aGUgc2FtZSBseXJpY3MuIEx5cmljIGludmFyaWFuY2UgdGVuZHMgdG8gY29tZSBhdCBwb2ludHMgb2YgZm9ybWFsIGNsb3N1cmUgKHRhaWwgcmVmcmFpbnMgYXQgdGhlIGVuZHMgb2Ygc3Ryb3BoZXMsIGNob3J1c2VzIGF0IHRoZSBlbmQgb2YgYSB2ZXJzZS1jaG9ydXMgc29uZ+KAmXMgZm9ybWFsIGN5Y2xlKS4iCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMyIsIHsgYXR0cnM6IHsgaWQ6ICJtdXNpYy12YXJpYW50IiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwgYXR0cnM6IHsgaHJlZjogIiNtdXNpYy12YXJpYW50IiB9IH0sCiAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiBNdXNpYy12YXJpYW50IikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiQSBtb2R1bGUgb3IgcGhyYXNlIGlzIG11c2ljLXZhcmlhbnQgaWYgZWFjaCB0aW1lIGl0IGFwcGVhcnMgaXQgYnJpbmdzIChtb3N0bHkpIGRpZmZlcmVudCBtdXNpYy4iCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMyIsIHsgYXR0cnM6IHsgaWQ6ICJtdXNpYy1pbnZhcmlhbnQiIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgeyBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLCBhdHRyczogeyBocmVmOiAiI211c2ljLWludmFyaWFudCIgfSB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgTXVzaWMtaW52YXJpYW50IikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiQSBtb2R1bGUgb3IgcGhyYXNlIGlzIG11c2ljLWludmFyaWFudCBpZiBlYWNoIHRpbWUgaXQgYXBwZWFycyBpdCBicmluZ3MgKG1vc3RseSkgdGhlIHNhbWUgbXVzaWMuIgogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDMiLCB7IGF0dHJzOiB7IGlkOiAiY2hvcnVzaWZpY2F0aW9uIiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwgYXR0cnM6IHsgaHJlZjogIiNjaG9ydXNpZmljYXRpb24iIH0gfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIENob3J1c2lmaWNhdGlvbiIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIkpheSBTdW1tYWNoIHVzZXMgdGhlIHRlcm0g4oCcY2hvcnVzaWZpY2F0aW9u4oCdIChwLiAzMjEpIHRvIGRlc2NyaWJlIGEgcHJvY2VzcyB3aGVyZSBtb2R1bGVzIGFyZSBzdHJpcHBlZCBhd2F5IGZyb20gdGhlIGZvcm1hbCBjeWNsZSB1bnRpbCBvbmx5IHRoZSBjaG9ydXMgbW9kdWxlIChDKSByZW1haW5zLiBGb3IgZXhhbXBsZSwgYSBzb25nIHRoYXQgYmVnaW5zIHdpdGggdGhlIGN5Y2xlIHtWUEN9IG1heSBhcHBlYXIgbmVhciB0aGUgZW5kIG9mIHRoZSBzb25nIHdpdGhvdXQgdGhlIHZlcnNlIHtQQ30gYW5kIHRoZW4gYWdhaW4gd2l0aG91dCB0aGUgcHJlY2hvcnVzIHtDfS4gVGhpcyBwcm9jZXNzIGlzIHBhcnQgb2YgYSBnb2FsLWRpcmVjdGVkIHByb2dyZXNzaW9uIHRvd2FyZCB0aGUgZW5kIG9mIHRoZSBzb25nLCBnaXZpbmcgc3BlY2lhbCBlbXBoYXNpcyB0byB0aGUgY2hvcnVzLiIKICAgICAgICApCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIkJvbiBKb3ZpJ3MgXCJMaXZpbicgb24gYSBQcmF5ZXJcIiBpcyBhIGdvb2QgZXhhbXBsZSBvZiBjaG9ydXNpZmljYXRpb24uIFRoZSBmaXJzdCB0d28gY3ljbGVzIGFyZSBzaW1pbGFyIGluIGxlbmd0aCBhbmQgY29udGVudCwgYnV0IHRoZSB0aGlyZCBjeWNsZSAoYmVnaW5uaW5nIGF0IDI6NTgpIHJlcGxhY2VzIHRoZSB2ZXJzZSB3aXRoIGFuIGluc3RydW1lbnRhbCBjaG9ydXMsIGdpdmluZyB0aGUgdGhpcmQgY3ljbGUgdHdvIGNob3J1c2VzLiBBZnRlciB0aGlzIGN5Y2xlIGNsb3NlcywgdGhlIGNob3J1cyByZXBlYXRzIGZvcm1pbmcgYSBjaG9ydXMtYmFzZWQgb3V0cm8uIgogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaWZyYW1lIiwgewogICAgICAgIGF0dHJzOiB7CiAgICAgICAgICBzcmM6CiAgICAgICAgICAgICJodHRwczovL2VtYmVkLnNwb3RpZnkuY29tLz91cmk9c3BvdGlmeSUzQXRyYWNrJTNBMEo2bVF4RVpubFJ0OXltekZudEE2eiIsCiAgICAgICAgICB3aWR0aDogIjMwMCIsCiAgICAgICAgICBoZWlnaHQ6ICI4MCIsCiAgICAgICAgICBmcmFtZWJvcmRlcjogIjAiLAogICAgICAgICAgYWxsb3d0cmFuc3BhcmVuY3k6ICJ0cnVlIgogICAgICAgIH0KICAgICAgfSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoIkhUTUwgbGluazogIiksCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgaHJlZjogImh0dHBzOi8vb3Blbi5zcG90aWZ5LmNvbS90cmFjay8wSjZtUXhFWm5sUnQ5eW16Rm50QTZ6IiwKICAgICAgICAgICAgICB0YXJnZXQ6ICJfYmxhbmsiLAogICAgICAgICAgICAgIHJlbDogIm5vb3BlbmVyIG5vcmVmZXJyZXIiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbCiAgICAgICAgICAgIF92bS5fdigiaHR0cHM6Ly9vcGVuLnNwb3RpZnkuY29tL3RyYWNrLzBKNm1ReEVabmxSdDl5bXpGbnRBNnoiKSwKICAgICAgICAgICAgX2MoIk91dGJvdW5kTGluayIpCiAgICAgICAgICBdLAogICAgICAgICAgMQogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDIiLCB7IGF0dHJzOiB7IGlkOiAiaGFybW9uaWMtYXNwZWN0cy1vZi1mb3JtIiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiNoYXJtb25pYy1hc3BlY3RzLW9mLWZvcm0iIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiBIYXJtb25pYyBhc3BlY3RzIG9mIGZvcm0iKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMyIsIHsgYXR0cnM6IHsgaWQ6ICJvbi10b25pYyIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIjb24tdG9uaWMiIH0gfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIE9uLXRvbmljIikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiQSBwaHJhc2Ugb3IgbW9kdWxlIGlzIG9uLXRvbmljIHdoZW4gaXQgYmVnaW5zIHdpdGggdG9uaWMgaGFybW9ueSAoSSBpbiByb290IHBvc2l0aW9uKS4iCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMyIsIHsgYXR0cnM6IHsgaWQ6ICJvZmYtdG9uaWMiIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgeyBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLCBhdHRyczogeyBocmVmOiAiI29mZi10b25pYyIgfSB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgT2ZmLXRvbmljIikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiQSBwaHJhc2Ugb3IgbW9kdWxlIGlzIG9mZi10b25pYyB3aGVuIGl0IGJlZ2lucyBvbiBhIGhhcm1vbnkgb3RoZXIgdGhhbiB0b25pYy4iCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMyIsIHsgYXR0cnM6IHsgaWQ6ICJoYXJtb25pY2FsbHktY2xvc2VkIiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiNoYXJtb25pY2FsbHktY2xvc2VkIiB9CiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgSGFybW9uaWNhbGx5IGNsb3NlZCIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIkEgcGhyYXNlIG9yIG1vZHVsZSBpcyBoYXJtb25pY2FsbHkgY2xvc2VkIHdoZW4gaXQgZW5kcyB3aXRoIHRvbmljIGhhcm1vbnkgKEkgaW4gcm9vdCBwb3NpdGlvbikuIgogICAgICAgICkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDMiLCB7IGF0dHJzOiB7IGlkOiAiaGFybW9uaWNhbGx5LW9wZW4iIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgICAgICAgICBhdHRyczogeyBocmVmOiAiI2hhcm1vbmljYWxseS1vcGVuIiB9CiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgSGFybW9uaWNhbGx5IG9wZW4iKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJBIHBocmFzZSBvciBtb2R1bGUgaXMgaGFybW9uaWNhbGx5IG9wZW4gd2hlbiBpdCBlbmRzIG9uIGEgaGFybW9ueSBvdGhlciB0aGFuIHRvbmljLiIKICAgICAgICApCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgzIiwgeyBhdHRyczogeyBpZDogInR1cm5hcm91bmQiIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgeyBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLCBhdHRyczogeyBocmVmOiAiI3R1cm5hcm91bmQiIH0gfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIFR1cm5hcm91bmQiKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJUaGUgdXNlIG9mIGEgbm9uLXRvbmljIGNob3JkICh1c3VhbGx5IGRvbWluYW50KSBhdCB0aGUgZW5kIG9mIGEgaGFybW9uaWNhbGx5IGNsb3NlZCB1bml0IHRvIHRyYW5zaXRpb24gaW50byB0aGUgYmVnaW5uaW5nIG9mIHRoZSBmb2xsb3dpbmcgb24tdG9uaWMgdW5pdC4iCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICdUaGUgc29uZyAiV29vbHkgQnVsbHkiIGJ5IFNhbSB0aGUgU2hhbSBhbmQgdGhlIFBoYXJvYWhzIGNvbnRhaW5zIGEgdHVybmFyb3VuZCBhdCB0aGUgZW5kIG9mIG1hbnkgb2YgaXRzIHN0cm9waGVzLiBPbmUgb2YgdGhlc2Ugb2NjdXIgYXQgMDo1NCDigJUgYSBzaW1wbGUgVicKICAgICAgICApLAogICAgICAgIF9jKCJzdXAiLCBbX3ZtLl92KCI3IildKSwKICAgICAgICBfdm0uX3YoIiBjaG9yZCB0byBwcmVwYXJlIHRoZSByZXR1cm4gb2YgSSBhcyB0aGUgbmV4dCBzdHJvcGhlIGJlZ2lucy4iKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJpZnJhbWUiLCB7CiAgICAgICAgYXR0cnM6IHsKICAgICAgICAgIHNyYzoKICAgICAgICAgICAgImh0dHBzOi8vZW1iZWQuc3BvdGlmeS5jb20vP3VyaT1zcG90aWZ5JTNBdHJhY2slM0EyWGt1U2JwNXNheThuWlc4ZzYxNTZaIiwKICAgICAgICAgIHdpZHRoOiAiMzAwIiwKICAgICAgICAgIGhlaWdodDogIjgwIiwKICAgICAgICAgIGZyYW1lYm9yZGVyOiAiMCIsCiAgICAgICAgICBhbGxvd3RyYW5zcGFyZW5jeTogInRydWUiCiAgICAgICAgfQogICAgICB9KSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigiSFRNTCBsaW5rOiAiKSwKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICBocmVmOiAiaHR0cHM6Ly9vcGVuLnNwb3RpZnkuY29tL3RyYWNrLzJYa3VTYnA1c2F5OG5aVzhnNjE1NloiLAogICAgICAgICAgICAgIHRhcmdldDogIl9ibGFuayIsCiAgICAgICAgICAgICAgcmVsOiAibm9vcGVuZXIgbm9yZWZlcnJlciIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIFsKICAgICAgICAgICAgX3ZtLl92KCJodHRwczovL29wZW4uc3BvdGlmeS5jb20vdHJhY2svMlhrdVNicDVzYXk4blpXOGc2MTU2WiIpLAogICAgICAgICAgICBfYygiT3V0Ym91bmRMaW5rIikKICAgICAgICAgIF0sCiAgICAgICAgICAxCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF9jKCJlbSIsIFsKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgJ0ludGVyZXN0aW5nbHkgaW4gdGhpcyBzb25nLCB0aGUgZ3VpdGFyaXN0IGRvZXNuXCd0IGFsd2F5cyByZW1lbWJlciB0aGUgdHVybmFyb3VuZHMuIE5vdGljZSB0aGF0IGF0IDA6MjggdGhlIGJhc3MgYW5kIGJhcml0b25lIHNheG9waG9uZSBwbGF5IHRoZSBkb21pbmFudCwgYnV0IHRoZSBndWl0YXJpc3Qga2VlcHMgdG9uaWMuIEF0IDE6MTgsIHRoZSBzaW5nZXIgeWVsbHMsICJXYXRjaCBpdCBub3chIFdhdGNoIGl0ISBXYXRjaCBpdCEiIGFzIGlmIHdhcm5pbmcgdGhlIGd1aXRhcmlzdCBub3QgdG8gbWlzcyB0aGUgdHVybmFyb3VuZCBpbiB0aGUgbmV4dCBiYXIuIEhlIGRvZXMgdGhlIHNhbWUgaW4gMjowOC4gV2hlbiB0aGUgZ3VpdGFyaXN0IGdldHMgdGhlIHR1cm5hcm91bmQgd2l0aCB0aGUgcmVzdCBvZiB0aGUgYmFuZCwgdGhlIHNpbmdlciB5ZWxscywgIllvdSBnb3QgaXQhIFlvdSBnb3QgaXQhIiBhcyBpZiBjb25ncmF0dWxhdGluZyB0aGUgZ3VpdGFyaXN0LicKICAgICAgICAgICkKICAgICAgICBdKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKAogICAgICAgICJwIiwKICAgICAgICBbCiAgICAgICAgICBfYygiUm91dGVyTGluayIsIHsgYXR0cnM6IHsgdG86ICIvcG9wUm9ja0Zvcm0uaHRtbCIgfSB9LCBbCiAgICAgICAgICAgIF9jKCJlbSIsIFtfdm0uX3YoIkJhY2sgdG8gcG9wL3JvY2sgZm9ybSBvdmVydmlldy4iKV0pCiAgICAgICAgICBdKQogICAgICAgIF0sCiAgICAgICAgMQogICAgICApCiAgICBdCiAgKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}