{"remainingRequest":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!K:\\Workspace\\web\\openmusic_reskin\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!K:\\Workspace\\web\\openmusic_reskin\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!K:\\Workspace\\web\\openmusic_reskin\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!K:\\Workspace\\web\\openmusic_reskin\\docs\\period.md?vue&type=template&id=59d1df86&","dependencies":[{"path":"K:\\Workspace\\web\\openmusic_reskin\\docs\\period.md","mtime":1588345028558},{"path":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"K:\\Workspace\\web\\openmusic_reskin\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgIkNvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yIiwKICAgIHsgYXR0cnM6IHsgInNsb3Qta2V5IjogX3ZtLiRwYXJlbnQuc2xvdEtleSB9IH0sCiAgICBbCiAgICAgIF9jKAogICAgICAgICJwIiwKICAgICAgICBbCiAgICAgICAgICBfdm0uX3YoIkEgcGVyaW9kIGlzIG9uZSB0eXBlIG9mIHRoZW1lLCBsaWtlIHRoZSAiKSwKICAgICAgICAgIF9jKCJSb3V0ZXJMaW5rIiwgeyBhdHRyczogeyB0bzogIi9zZW50ZW5jZS5odG1sIiB9IH0sIFsKICAgICAgICAgICAgX3ZtLl92KCJzZW50ZW5jZSIpCiAgICAgICAgICBdKSwKICAgICAgICAgIF92bS5fdigiLCBjb21tb24gdG8gdGhlIENsYXNzaWNhbCBzdHlsZS4iKQogICAgICAgIF0sCiAgICAgICAgMQogICAgICApLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIlRoZSBwZXJpb2QgaXMgZ2VuZXJhbGx5IGVpZ2h0IG1lYXN1cmVzIGxvbmcgYW5kIGNvbnRhaW5zIHR3byBmb3VyLW1lYXN1cmUgcGhyYXNlcywgY2FsbGVkICIKICAgICAgICApLAogICAgICAgIF9jKCJlbSIsIFtfdm0uX3YoImFudGVjZWRlbnQiKV0pLAogICAgICAgIF92bS5fdigiIGFuZCAiKSwKICAgICAgICBfYygiZW0iLCBbX3ZtLl92KCJjb25zZXF1ZW50IildKSwKICAgICAgICBfdm0uX3YoIi4iKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJpbWciLCB7IGF0dHJzOiB7IHNyYzogIkdyYXBoaWNzL0NsYXNzaWNhbFRoZW1lcy9wZXJpb2Quc3ZnIiB9IH0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIlRoZSBwZXJpb2QgaXMgY2hhcmFjdGVyaXplZCBieSBiYWxhbmNlIGFuZCBzeW1tZXRyeS4gSXRzIGFudGVjZWRlbnQgcGhyYXNlIGlzIGluaXRpYXRlZCBieSBhIGJhc2ljIGlkZWEgdGhhdCByZWN1cnMgYXQgdGhlIGJlZ2lubmluZyBvZiB0aGUgY29uc2VxdWVudCBwaHJhc2UuIFVubGlrZSB0aGUgc2VudGVuY2UsIHdoaWNoIGV4aGliaXRzIGEgc2luZ2xlIGNhZGVuY2UsIHRoZSBwZXJpb2QgY29udGFpbnMgIgogICAgICAgICksCiAgICAgICAgX2MoImVtIiwgW192bS5fdigidHdvIGNhZGVuY2VzIildKSwKICAgICAgICBfdm0uX3YoIiwgYSB3ZWFrIG9uZSB0byBlbmQgdGhlICIpLAogICAgICAgIF9jKCJlbSIsIFtfdm0uX3YoImFudGVjZWRlbnQiKV0pLAogICAgICAgIF92bS5fdigiIGFuZCBhIHN0cm9uZyBvbmUgdG8gZW5kIHRoZSAiKSwKICAgICAgICBfYygiZW0iLCBbX3ZtLl92KCJjb25zZXF1ZW50IildKSwKICAgICAgICBfdm0uX3YoIi4iKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMiIsIHsgYXR0cnM6IHsgaWQ6ICJhbnRlY2VkZW50LXBocmFzZS1tbS0xLTQiIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgICAgICAgICBhdHRyczogeyBocmVmOiAiI2FudGVjZWRlbnQtcGhyYXNlLW1tLTEtNCIgfQogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIEFudGVjZWRlbnQgcGhyYXNlIChtbS4gMeKAkzQpIikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiVW5saWtlIHRoZSBzZW50ZW5jZSwgd2hpY2ggY29udGFpbnMgYSBiYXNpYyBpZGVhIGZvbGxvd2VkIGJ5IGEgcmVwZXRpdGlvbiwgdGhlIHR3byBtZWFzdXJlIGJhc2ljIGlkZWEgdGhhdCBiZWdpbnMgdGhlIGEgcGVyaW9kJ3MgYW50ZWNlZGVudCBpcyBhbHdheXMgZm9sbG93ZWQgYnkgYSB0d28tbWVhc3VyZSAiCiAgICAgICAgKSwKICAgICAgICBfYygiZW0iLCBbX3ZtLl92KCJjb250cmFzdGluZyBpZGVhIildKSwKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiIChDSSkuIFRoYXQgY29udHJhc3RpbmcgaWRlYSBzdXBwb3J0cyBhIGNhZGVudGlhbCBwcm9ncmVzc2lvbiB0aGF0IGVuZHMgdGhlIGFudGVjZWRlbnQgd2l0aCBhIHdlYWsgY2FkZW5jZSwgZWl0aGVyIGEgSEMgb3IgYW4gSUFDLiIKICAgICAgICApCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImZpZ3VyZSIsIFsKICAgICAgICBfYygiaW1nIiwgeyBhdHRyczogeyBzcmM6ICJHcmFwaGljcy9mb3JtL2FudGVjZWRlbnQucG5nIiB9IH0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJmaWdjYXB0aW9uIiwgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiQW50ZWNlZGVudDogSGF5ZG4sIFBpYW5vIFRyaW8gaW4gQyBtYWpvciwgSG9iLiBYVjoyNywgSUlJLCBtbS4gMS00ICIKICAgICAgICAgICkKICAgICAgICBdKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJpZnJhbWUiLCB7CiAgICAgICAgYXR0cnM6IHsKICAgICAgICAgIHNyYzoKICAgICAgICAgICAgImh0dHBzOi8vZW1iZWQuc3BvdGlmeS5jb20vP3VyaT1zcG90aWZ5OnRyYWNrOjFCVVNJaFlkdTBQOExCV1hMcEF4NGciLAogICAgICAgICAgd2lkdGg6ICIzMDAiLAogICAgICAgICAgaGVpZ2h0OiAiODAiLAogICAgICAgICAgZnJhbWVib3JkZXI6ICIwIiwKICAgICAgICAgIGFsbG93dHJhbnNwYXJlbmN5OiAidHJ1ZSIKICAgICAgICB9CiAgICAgIH0pLAogICAgICBfYygiYnIiKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKAogICAgICAgICJwIiwKICAgICAgICBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICJOb3RlIHRoZSBjb250cmFzdCBjcmVhdGVkIGJldHdlZW4gdGhlIGJhc2ljIGlkZWEgYW5kIGNvbnRyYXN0aW5nIGlkZWEuIFdoaWxlIHRoZSBCSSBhc2NlbmRzLCBvdXRsaW5pbmcgdGhlIHRvbmljIHRyaWFkIHdpdGggbGVhcHMgdG8gZWFjaCBvZiBpdHMgbWVtYmVycywgdGhlIENJIGRlc2NlbmRzIHN0ZXB3aXNlIGxlYWRpbmcgdG8gYSB3ZWFrIEk6SEMuIFRoZSBlbXBoYXNpcyBvbiB0b25pYyBpbiB0aGUgbWVsb2R5IG9mIHRoZSBCSSBpcyBhY2NvbXBhbmllZCBieSBhIHRvbmljIHByb2xvbmdhdGlvbiBpbiB0aGUgaGFybW9ueSAoYSB2YXJpYW50IG9mIHRoZSAiCiAgICAgICAgICApLAogICAgICAgICAgX2MoIlJvdXRlckxpbmsiLCB7IGF0dHJzOiB7IHRvOiAiL3NjaGVtYXRhT3BlbnNBbmRDbG9zZXMuaHRtbCIgfSB9LCBbCiAgICAgICAgICAgIF9jKCJlbSIsIFtfdm0uX3YoIlJvbWFuZXNjYSIpXSksCiAgICAgICAgICAgIF92bS5fdigiIHNjaGVtYSIpCiAgICAgICAgICBdKSwKICAgICAgICAgIF92bS5fdigiKToiKQogICAgICAgIF0sCiAgICAgICAgMQogICAgICApLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImJsb2NrcXVvdGUiLCBbCiAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICBfYygic3Ryb25nIiwgW192bS5fdigiSSBWNiBWSSBJSUkiKV0pLAogICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICBfdm0uX3YoIlxub3IiKSwKICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgICBfYygic3Ryb25nIiwgW192bS5fdigiVCgxIEQ3cCB4NiAzKSIpXSkKICAgICAgICBdKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigiU3VwcG9ydGluZyB0aGUgQ0kgaXMgYW4gZXhwYW5kZWQgY2FkZW50aWFsIHByb2dyZXNzaW9uOiIpCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImJsb2NrcXVvdGUiLCBbCiAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICBfYygic3Ryb25nIiwgWwogICAgICAgICAgICBfdm0uX3YoIklJSSBJViBWIiksCiAgICAgICAgICAgIF9jKCJzdXAiLCBbX3ZtLl92KCI2LzUiKV0pLAogICAgICAgICAgICBfdm0uX3YoIi9WIFYiKQogICAgICAgICAgXSksCiAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgIF92bS5fdigiXG5vciIpLAogICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICBfdm0uX3YoIiAiKSwKICAgICAgICAgIF9jKCJzdHJvbmciLCBbX3ZtLl92KCJUMyBTKDQgWytdKSBENSIpXSkKICAgICAgICBdKQogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMiIsIHsgYXR0cnM6IHsgaWQ6ICJjb25zZXF1ZW50LXBocmFzZS1tbS01LTgiIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgICAgICAgICBhdHRyczogeyBocmVmOiAiI2NvbnNlcXVlbnQtcGhyYXNlLW1tLTUtOCIgfQogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIENvbnNlcXVlbnQgcGhyYXNlIChtbS4gNeKAkzgpIikKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiQ29uc2VxdWVudCBwaHJhc2VzIGFsd2F5cyBiZWdpbiB3aXRoIGEgcmVzdGF0ZW1lbnQgb2YgdGhlIEJJLCBvY2Nhc2lvbmFsbHkgdmFyaWVkLCBhbmQgZW5kIHdpdGggYSBDSS4gQSBjb25zZXF1ZW50IHBocmFzZSdzIENJIG9mdGVuIHJlc2VtYmxlcyB0aGUgYW50ZWNlZGVudCdzLCBidXQgc2xpZ2h0bHkgYWx0ZXJlZCB0byBhY2NvbW1vZGF0ZSBhIHN0cm9uZ2VyIGNhZGVuY2UuIEl0IGlzIGFsc28gY29tbW9uIGZvciBhIGNvbnNlcXVlbnQgcGhyYXNlJ3MgQ0kgdG8gYmUgZW50aXJlbHkgbmV3LiBXaGlsZSBhIHNlbnRlbmNlIGNhbiBjbG9zZSB3aXRoIGEgbnVtYmVyIG9mIGNhZGVuY2UgdHlwZXMsIHRoZSBwZXJpb2QncyBjb25zZXF1ZW50IHBocmFzZSBhbHdheXMgZW5kcyB3aXRoIGEgUEFDOiIKICAgICAgICApCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImZpZ3VyZSIsIFsKICAgICAgICBfYygiaW1nIiwgeyBhdHRyczogeyBzcmM6ICJHcmFwaGljcy9mb3JtL3h2MjcucG5nIiB9IH0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJmaWdjYXB0aW9uIiwgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiQW50ZWNlZGVudCArIENvbnNlcXVlbnQ6IEhheWRuLCBQaWFubyBUcmlvIGluIEMgbWFqb3IsIEhvYi4gWFY6MjcsIElJSSwgbW0uIDEtOCAiCiAgICAgICAgICApCiAgICAgICAgXSkKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiSW4gdGhpcyBleGFtcGxlLCB0aGUgQkkgaXMgcmVzdGF0ZWQgZXhhY3RseSBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSBjb25zZXF1ZW50LiBUaGUgY29uY2x1ZGluZyBDSSBpcyBhIHNsaWdodCB2YXJpYXRpb24gb2YgdGhlIGVuZCBvZiB0aGUgYW50ZWNlZGVudCwgYWx0ZXJlZCBoZXJlIHRvIGNyZWF0ZSBhIFBBQy4iCiAgICAgICAgKQogICAgICBdKQogICAgXQogICkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW10KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}